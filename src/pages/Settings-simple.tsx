import React, { useState, useEffect } from 'react';
import { useTranslation } from 'react-i18next';
import { Button } from '@/components/ui/button';
import { Link } from 'react-router-dom';
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';
import { Label } from '@/components/ui/label';
import { Switch } from '@/components/ui/switch';
import { Slider } from '@/components/ui/slider';
import { loadSettings, saveSettings, AppSettings } from '@/utils/storage';
import { soundManager, playSound } from '@/utils/sound';
import { SoundButton } from '@/components/ui/sound-button';

const SettingsSimple = () => {
  const { t, i18n } = useTranslation();
  const [settings, setSettings] = useState<AppSettings>(loadSettings());
  const [soundEnabled, setSoundEnabled] = useState(soundManager.isEnabled());
  const [soundVolume, setSoundVolume] = useState(soundManager.getVolume());

  useEffect(() => {
    // Ensure i18n language matches loaded settings on component mount
    if (i18n.language !== settings.language) {
      i18n.changeLanguage(settings.language);
    }
  }, [i18n, settings.language]);

  const handleLanguageChange = (value: string) => {
    const newSettings = { ...settings, language: value };
    setSettings(newSettings);
    saveSettings(newSettings);
    i18n.changeLanguage(value);
  };

  const handleMapTypeChange = (value: string) => {
    const newSettings = { ...settings, mapType: value as AppSettings['mapType'] };
    setSettings(newSettings);
    saveSettings(newSettings);
  };

  const handleSoundToggle = (enabled: boolean) => {
    setSoundEnabled(enabled);
    soundManager.setEnabled(enabled);
    if (enabled) {
      playSound('success'); // –¢–µ—Å—Ç–æ–≤—ã–π –∑–≤—É–∫ –ø—Ä–∏ –≤–∫–ª—é—á–µ–Ω–∏–∏
    }
  };

  const handleVolumeChange = (value: number[]) => {
    const volume = value[0];
    setSoundVolume(volume);
    soundManager.setVolume(volume);
  };

  const testSound = () => {
    playSound('click');
  };

  return (
    <div className="container mx-auto p-4 space-y-6">
      <div className="flex items-center justify-between">
        <h1 className="text-2xl font-bold">{t('settings')}</h1>
        <Link to="/">
          <SoundButton variant="outline" soundType="click">‚Üê {t('home')}</SoundButton>
        </Link>
      </div>

      <div className="max-w-md mx-auto space-y-6">
        {/* –Ø–∑—ã–∫ */}
        <div className="space-y-2">
          <Label htmlFor="language-select" className="text-lg">{t('language')}:</Label>
          <Select value={settings.language} onValueChange={handleLanguageChange}>
            <SelectTrigger id="language-select">
              <SelectValue placeholder={t('language')} />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="ru">–†—É—Å—Å–∫–∏–π</SelectItem>
            </SelectContent>
          </Select>
        </div>

        {/* –ï–¥–∏–Ω–∏—Ü—ã */}
        <div className="space-y-2">
          <Label className="text-lg">{t('units')}:</Label>
          <div className="p-3 border rounded-md bg-gray-50">
            —Å–æ—Ç–æ–∫ / –º¬≤
          </div>
        </div>

        {/* –¢–∏–ø –∫–∞—Ä—Ç—ã */}
        <div className="space-y-2">
          <Label htmlFor="map-type-select" className="text-lg">{t('mapType')}:</Label>
          <Select value={settings.mapType} onValueChange={handleMapTypeChange}>
            <SelectTrigger id="map-type-select">
              <SelectValue placeholder={t('mapType')} />
            </SelectTrigger>
            <SelectContent>
              <SelectItem value="roadmap">–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è</SelectItem>
              <SelectItem value="satellite">–°–ø—É—Ç–Ω–∏–∫</SelectItem>
              <SelectItem value="hybrid">–ì–∏–±—Ä–∏–¥</SelectItem>
              <SelectItem value="terrain">–†–µ–ª—å–µ—Ñ</SelectItem>
            </SelectContent>
          </Select>
        </div>

        {/* –ó–≤—É–∫–æ–≤—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className="space-y-4 p-4 border rounded-lg bg-blue-50">
          <h3 className="text-lg font-semibold">üîä –ó–≤—É–∫–æ–≤—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã</h3>
          
          {/* –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ –∑–≤—É–∫–æ–≤ */}
          <div className="flex items-center justify-between">
            <Label htmlFor="sound-toggle" className="text-base">–í–∫–ª—é—á–∏—Ç—å –∑–≤—É–∫–∏:</Label>
            <Switch
              id="sound-toggle"
              checked={soundEnabled}
              onCheckedChange={handleSoundToggle}
            />
          </div>

          {/* –ì—Ä–æ–º–∫–æ—Å—Ç—å */}
          {soundEnabled && (
            <>
              <div className="space-y-2">
                <Label className="text-base">–ì—Ä–æ–º–∫–æ—Å—Ç—å: {Math.round(soundVolume * 100)}%</Label>
                <Slider
                  value={[soundVolume]}
                  onValueChange={handleVolumeChange}
                  max={1}
                  min={0}
                  step={0.1}
                  className="w-full"
                />
              </div>

              {/* –¢–µ—Å—Ç –∑–≤—É–∫–∞ */}
              <SoundButton 
                onClick={testSound} 
                variant="outline" 
                size="sm"
                soundType="notification"
                className="w-full"
              >
                üéµ –¢–µ—Å—Ç –∑–≤—É–∫–∞
              </SoundButton>
            </>
          )}

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–≤—É–∫–∞—Ö */}
          <div className="text-xs text-gray-600 space-y-1">
            <div>‚Ä¢ –ó–≤—É–∫–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥—è—Ç—Å—è –ø—Ä–∏:</div>
            <div className="ml-2">- –ù–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–æ–∫</div>
            <div className="ml-2">- –ü–æ–ª—É—á–µ–Ω–∏–∏ GPS</div>
            <div className="ml-2">- –î–æ–±–∞–≤–ª–µ–Ω–∏–∏ –º–∞—Ä–∫–µ—Ä–æ–≤</div>
            <div className="ml-2">- –†–∞—Å—á–µ—Ç–µ –ø–ª–æ—â–∞–¥–∏</div>
            <div className="ml-2">- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö</div>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ */}
        <div className="space-y-4 p-4 border rounded-lg">
          <h3 className="text-lg font-semibold">‚öôÔ∏è –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ</h3>
          
          <SoundButton 
            onClick={() => {
              localStorage.clear();
              window.location.reload();
            }}
            variant="destructive"
            size="sm"
            soundType="delete"
            className="w-full"
          >
            üóëÔ∏è –°–±—Ä–æ—Å–∏—Ç—å –≤—Å–µ –¥–∞–Ω–Ω—ã–µ
          </SoundButton>
          
          <div className="text-xs text-gray-500 text-center">
            –≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
          </div>
        </div>
      </div>
    </div>
  );
};

export default SettingsSimple;
