const https = require('https');
const http = require('http');
const fs = require('fs');
const path = require('path');
const { execSync } = require('child_process');

// –°–æ–∑–¥–∞–Ω–∏–µ —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω–æ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞
function createSelfSignedCert() {
    try {
        console.log('üîß –°–æ–∑–¥–∞–µ–º —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç...');
        
        // –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —Å –ø–æ–º–æ—â—å—é Node.js crypto
        const crypto = require('crypto');
        
        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–ª—é—á –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ
        const keyPair = crypto.generateKeyPairSync('rsa', {
            modulusLength: 2048,
            publicKeyEncoding: {
                type: 'spki',
                format: 'pem'
            },
            privateKeyEncoding: {
                type: 'pkcs8',
                format: 'pem'
            }
        });
        
        // –ü—Ä–æ—Å—Ç–æ–π —Å–∞–º–æ–ø–æ–¥–ø–∏—Å–∞–Ω–Ω—ã–π —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏)
        const cert = `-----BEGIN CERTIFICATE-----
MIICtTCCAZ0CAQAwDQYJKoZIhvcNAQELBQAwEjEQMA4GA1UEAwwHbG9jYWxob3Qw
HhcNMjMwMTAxMDAwMDAwWhcNMjQwMTAxMDAwMDAwWjASMRAwDgYDVQQDDAdsb2Nh
bGhvc3QwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC1234567890ABC
DEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFG
HIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJK
LMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNO
PQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRS
TUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVW
XYZabcdefghijklmnopqrstuvwxyz1234567890QIDAQABMA0GCSqGSIb3DQEBCwUA
A4IBAQAr1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstu
vwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxy
z1234567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz123
4567890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567
890ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqr
-----END CERTIFICATE-----`;
        
        const key = `-----BEGIN PRIVATE KEY-----
MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC1234567890ABC
DEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFG
HIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJK
LMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNO
PQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRS
TUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUVW
XYZabcdefghijklmnopqrstuvwxyz1234567890QIDAQABAoIBAAq1234567890ABC
DEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFG
HIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJK
LMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNO
PQRSTUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRS
TUVWXYZabcdefghijklmnopqrstuvwxyz1234567890ABCDEFGHIJKLMNOPQRSTUr
-----END PRIVATE KEY-----`;
        
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª—é—á
        fs.writeFileSync('server.key', keyPair.privateKey);
        fs.writeFileSync('server.crt', keyPair.publicKey);
        
        console.log('‚úÖ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç —Å–æ–∑–¥–∞–Ω!');
        return true;
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞:', error.message);
        return false;
    }
}

// MIME —Ç–∏–ø—ã –¥–ª—è —Ñ–∞–π–ª–æ–≤
const mimeTypes = {
    '.html': 'text/html',
    '.js': 'text/javascript',
    '.css': 'text/css',
    '.json': 'application/json',
    '.png': 'image/png',
    '.jpg': 'image/jpg',
    '.gif': 'image/gif',
    '.svg': 'image/svg+xml',
    '.wav': 'audio/wav',
    '.mp3': 'audio/mpeg',
    '.mp4': 'video/mp4',
    '.woff': 'application/font-woff',
    '.ttf': 'application/font-ttf',
    '.eot': 'application/vnd.ms-fontobject',
    '.otf': 'application/font-otf',
    '.wasm': 'application/wasm'
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—Ä–æ—Å–æ–≤
function requestHandler(req, res) {
    console.log(`üì° ${req.method} ${req.url}`);
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');
    
    // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º OPTIONS –∑–∞–ø—Ä–æ—Å—ã
    if (req.method === 'OPTIONS') {
        res.writeHead(200);
        res.end();
        return;
    }
    
    // –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å —Ñ–∞–π–ª–∞
    let filePath = req.url === '/' ? '/mobile-gps-fixed.html' : req.url;
    filePath = path.join(__dirname, filePath);
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if (!fs.existsSync(filePath)) {
        res.writeHead(404, { 'Content-Type': 'text/html' });
        res.end(`
            <h1>404 - –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω</h1>
            <p>–§–∞–π–ª ${req.url} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç</p>
            <a href="/mobile-gps-fixed.html">üîß –ü–µ—Ä–µ–π—Ç–∏ –∫ GPS –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é</a>
        `);
        return;
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º MIME —Ç–∏–ø
    const ext = path.extname(filePath);
    const mimeType = mimeTypes[ext] || 'application/octet-stream';
    
    try {
        const content = fs.readFileSync(filePath);
        res.writeHead(200, { 'Content-Type': mimeType });
        res.end(content);
    } catch (error) {
        res.writeHead(500, { 'Content-Type': 'text/html' });
        res.end(`<h1>500 - –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞</h1><p>${error.message}</p>`);
    }
}

// –ó–∞–ø—É—Å–∫ HTTPS —Å–µ—Ä–≤–µ—Ä–∞
function startHTTPSServer() {
    const PORT = 8443;
    
    // –°–æ–∑–¥–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if (!fs.existsSync('server.key') || !fs.existsSync('server.crt')) {
        if (!createSelfSignedCert()) {
            console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å HTTPS —Å–µ—Ä–≤–µ—Ä –±–µ–∑ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤');
            console.log('üí° –ó–∞–ø—É—Å–∫–∞–µ–º HTTP —Å–µ—Ä–≤–µ—Ä –Ω–∞ –ø–æ—Ä—Ç—É 8080...');
            
            // Fallback –Ω–∞ HTTP —Å–µ—Ä–≤–µ—Ä
            const httpServer = http.createServer(requestHandler);
            httpServer.listen(8080, () => {
                console.log(`
üîÑ HTTP —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω (fallback):
   http://192.168.2.104:8080/mobile-gps-fixed.html
   
‚ö†Ô∏è  GPS –º–æ–∂–µ—Ç –Ω–µ —Ä–∞–±–æ—Ç–∞—Ç—å –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö –∏–∑-–∑–∞ HTTP
`);
            });
            return;
        }
    }
    
    try {
        // –ß–∏—Ç–∞–µ–º —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
        const options = {
            key: fs.readFileSync('server.key'),
            cert: fs.readFileSync('server.crt')
        };
        
        // –°–æ–∑–¥–∞–µ–º HTTPS —Å–µ—Ä–≤–µ—Ä
        const httpsServer = https.createServer(options, requestHandler);
        
        httpsServer.listen(PORT, () => {
            console.log(`
üöÄ HTTPS —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!

üì± –î–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:
   https://192.168.2.104:${PORT}/mobile-gps-fixed.html

‚ö†Ô∏è  –í–ê–ñ–ù–û: –ü—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞—Ö–æ–¥–µ –±—Ä–∞—É–∑–µ—Ä –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.
   –ù–∞–∂–º–∏—Ç–µ "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ" ‚Üí "–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç" (–∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ)
   
üîß –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ GPS –¥–æ–ª–∂–µ–Ω –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å!

üíª –î–ª—è –∫–æ–º–ø—å—é—Ç–µ—Ä–∞:
   https://localhost:${PORT}/mobile-gps-fixed.html

–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C
            `);
        });
        
        httpsServer.on('error', (error) => {
            console.error('‚ùå –û—à–∏–±–∫–∞ HTTPS —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
            console.log('üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞');
        });
        
    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ HTTPS —Å–µ—Ä–≤–µ—Ä–∞:', error.message);
    }
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
process.on('SIGINT', () => {
    console.log('\nüõë –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    process.exit(0);
});

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä
startHTTPSServer();
